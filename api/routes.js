const express = require('express');
const router = express.Router();

module.exports = (bot, groupChatId) => {
   // console.log('–ü–æ–ª—É—á–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ bot:', bot);

    // –ú–∞—Å—Å–∏–≤ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    let users = [];

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π
    bot.on('message', async (msg) => {
        const chatId = msg.chat.id;
        const userName = msg.from.first_name || '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å';

        // –õ–æ–≥–∏—Ä—É–µ–º –≤—Å–µ –≤—Ö–æ–¥—è—â–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è
      //  console.log('–ü–æ–ª—É—á–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ:', msg);

        try {
            if (msg?.web_app_data?.data) {
                const data = JSON.parse(msg.web_app_data.data);
                let { projectName, goals, audience, fullname, createdAt } = data;

                // –§—É–Ω–∫—Ü–∏—è –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –∑–∞–ø—Ä–µ—â–µ–Ω–Ω—ã—Ö —Å–∏–º–≤–æ–ª–æ–≤ –∏ —ç–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –∏—Ö
                const cleanInput = (input) => {
                    const forbiddenCharacters = /[<>.,!@#$%^&*()_+=\-`~;:'"[\]{}|\\/?]/g;
                    return input.replace(forbiddenCharacters, (match) => '\\' + match);
                };

                // –û—á–∏—â–∞–µ–º –≤—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
                projectName = cleanInput(projectName);
                goals = cleanInput(goals);
                audience = cleanInput(audience);
                fullname = cleanInput(fullname);

                // –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –º–∞—Å—Å–∏–≤
                if (!users.some(user => user.fullname === fullname)) {
                    users.push({ projectName, goals, audience, fullname });
                }

                const formatString = (label, value) => {
                    const labelLength = 12;
                    const spacesCount = Math.max(0, labelLength - label.length);
                    const spaces = ' '.repeat(spacesCount);
                    return `${label}${spaces}: _${value}_`;
                };

                let message = `                   
${formatString('*–ü—Ä–æ–µ–∫—Ç*', projectName)}
${formatString('*–ê–≤—Ç–æ—Ä*', fullname)}
${formatString('*–¶–µ–ª–∏*', goals)}
${formatString('*–î–ª—è –∫–æ–≥–æ*', audience)}
${formatString('*–î–∞—Ç–∞ *', createdAt ? new Date(createdAt._seconds * 1000).toLocaleString() : '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')} 
`;

                // –£–¥–∞–ª—è–µ–º —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ —Å–∏–º–≤–æ–ª—ã —Ç–æ–ª—å–∫–æ –¥–ª—è messageChatId
                const removeForbiddenCharacters = (input) => {
                    const forbiddenCharacters = /[<>.,!@#$%^&*()_+=\-`~;:'"[\]{}|\\/?]/g;
                    return input.replace(forbiddenCharacters, '');
                };

                // –û—á–∏—â–∞–µ–º projectName —Ç–æ–ª—å–∫–æ –¥–ª—è messageChatId
                const cleanProjectNameForMessageChatId = removeForbiddenCharacters(projectName);

                let messageChatId = `üî•–°–ø–∞—Å–∏–±–æ –∑–∞ –∏–¥–µ—é üí° "${cleanProjectNameForMessageChatId}"!\n–í–∞—à –≤–∫–ª–∞–¥ –≤ —Ä–∞–∑–≤–∏—Ç–∏–µ MS Dynamics AX –æ—á–µ–Ω—å —Ü–µ–Ω–µ–Ω.`;

                // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
                await bot.sendMessage(chatId, messageChatId);

                // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –≥—Ä—É–ø–ø—É
                await bot.sendMessage(groupChatId, message.trim(), { parse_mode: 'MarkdownV2' });

                console.log('–î–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã:', message);
            } else if (msg.text === '/start') {

               // console.log('–ö–æ–º–∞–Ω–¥–∞ /start –ø–æ–ª—É—á–µ–Ω–∞'); // –õ–æ–≥ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
                await bot.sendMessage(chatId, "–£ –í–∞—Å –µ—Å—Ç—å –∏–¥–µ—è –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–æ—Ü–µ—Å—Å—ã –≤ –ê–∫—Å–∞–ø—Ç–µ? üöÄ\n\n" +
                    "–ù–µ —É–ø—É—Å—Ç–∏—Ç–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å —Å–¥–µ–ª–∞—Ç—å –∂–∏–∑–Ω—å —Å–µ–±–µ –∏ —Å–≤–æ–µ–π –∫–æ–º–∞–Ω–¥–µ –ø—Ä–æ—â–µ!\n\n" +
                    "‚¨áÔ∏è –ö–Ω–æ–ø–∫–∞ \"–ó–∞–ø–æ–ª–Ω–∏—Ç—å —Ñ–æ—Ä–º—É\"\n\n" +
                    "–∏–ª–∏ —Å–≤–µ—Ä–Ω—É—Ç–∞—è –ø–∏–∫—Ç–æ–≥—Ä–∞–º–º–∞ üéõÔ∏è —Å–ø—Ä–∞–≤–∞ (–µ—Å–ª–∏ –∫–Ω–æ–ø–∫–∏ –Ω–µ—Ç)\n\n" +
                    "–ö–Ω–æ–ø–∫–∞ \"–ò–¥–µ–∏\" - –ø—Ä–æ—Å–º–æ—Ç—Ä –≤—Å–µ—Ö –∏–¥–µ–π \n\n" +
                    "üì° –û—Ç–∫–ª—é—á–∏—Ç–µ VPN –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–π —Ä–∞–±–æ—Ç—ã –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è\n\n" +
                    "‚ú® –ó–∞–ø–æ–ª–Ω–∏—Ç–µ –ø–æ–ª—è —Ñ–æ—Ä–º—ã –∏ –¥–∞–π—Ç–µ –∂–∏–∑–Ω—å —Å–≤–æ–µ–º—É –∑–∞–º—ã—Å–ª—É", {
                    reply_markup: {
                        keyboard: [
                            [{ text: '–ó–∞–ø–æ–ª–Ω–∏—Ç—å —Ñ–æ—Ä–º—É', web_app: { url: process.env.APP_URL } }]
                        ],
                        resize_keyboard: true
                    }
                });
            } else if (msg.text === '/users') {
                // –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–æ —Å–ø–∏—Å–∫–æ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
                if (users.length === 0) {
                    await bot.sendMessage(chatId, '–ù–µ—Ç –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.');
                } else {
                    let userList = users.map((user, index) => `${index + 1}. ${user.fullname}`).join('\n');
                    let totalUsers = users.length;
                    let responseMessage = `–°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, –∫—Ç–æ –æ—Å—Ç–∞–≤–∏–ª –∑–∞—è–≤–∫–∏ :\n${userList}\n\n–û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞—è–≤–æ–∫: ${totalUsers}`;

                    await bot.sendMessage(chatId, responseMessage);
                }
            } else if (msg.photo && msg.from.id !== bot.id) { // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–µ –æ—Ç –±–æ—Ç–∞ –ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ
                // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
                const photoId = msg.photo[msg.photo.length - 1].file_id; // –ü–æ–ª—É—á–∞–µ–º ID —Å–∞–º–æ–≥–æ –±–æ–ª—å—à–æ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
                await bot.sendMessage(chatId, "–°–ø–∞—Å–∏–±–æ –∑–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ! –û–Ω–æ –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ –≥—Ä—É–ø–ø—É.");

                // –û—Ç–ø—Ä–∞–≤–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ –≥—Ä—É–ø–ø—É —Å –∏–º–µ–Ω–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                await bot.sendPhoto(groupChatId, photoId, { caption: `–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç ${userName} (ID: ${chatId})` });
            } else if (msg.document && msg.from.id !== bot.id) { // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–µ –æ—Ç –±–æ—Ç–∞ –ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ
                // –û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–æ–∫—É–º–µ–Ω—Ç–∞
                const documentId = msg.document.file_id;
                await bot.sendMessage(chatId, "–°–ø–∞—Å–∏–±–æ –∑–∞ –¥–æ–∫—É–º–µ–Ω—Ç! –û–Ω –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –≤ –≥—Ä—É–ø–ø—É.");

                // –û—Ç–ø—Ä–∞–≤–∫–∞ –¥–æ–∫—É–º–µ–Ω—Ç–∞ –≤ –≥—Ä—É–ø–ø—É —Å –∏–º–µ–Ω–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                await bot.sendDocument(groupChatId, documentId);
                await bot.sendMessage(groupChatId, `–î–æ–∫—É–º–µ–Ω—Ç –æ—Ç ${userName} (ID: ${chatId})`);
            } else if (msg.text && msg.from.id !== bot.id) { // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–µ –æ—Ç –±–æ—Ç–∞ –ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ
                const userMessage = `–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç ${userName} (ID: ${chatId}): ${msg.text}`;

                // –û—Ç–≤–µ—Ç –Ω–∞ —Ç–µ–∫—Å—Ç–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è, –∫–æ—Ç–æ—Ä—ã–µ –Ω–µ —è–≤–ª—è—é—Ç—Å—è –∫–æ–º–∞–Ω–¥–∞–º–∏
                await bot.sendMessage(chatId, "–°–ø–∞—Å–∏–±–æ –∑–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ! –û–Ω–æ –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ –≥—Ä—É–ø–ø—É.");

                // –û—Ç–ø—Ä–∞–≤–∫–∞ —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –≥—Ä—É–ø–ø—É
                await bot.sendMessage(groupChatId, userMessage);
            }
        } catch (error) {
            console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –¥–∞–Ω–Ω—ã—Ö:', error);
            await bot.sendMessage(chatId, '–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –¥–∞–Ω–Ω—ã—Ö.');
        }
    });

    return router;
};